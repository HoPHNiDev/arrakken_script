from pyrogram import Client, filters, idle
from pyrogram.types import ReplyKeyboardMarkup
from pyrogram.handlers import MessageHandler

from yaml import safe_load, safe_dump

from os import getcwd
import time
from datetime import datetime
import requests

print('–ü–æ–ª–Ω—ã–π –≥–∞–π–¥ –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –≤ –∫–∞–Ω–∞–ª–µ @HoPHNiArrakken | Coder: @HoPHNi')

def yaml_dump(key, value):
    with open(f'{getcwd()}/config.yaml', 'a') as cfg_for_write:
        safe_dump({key: value}, cfg_for_write)

def send_requst(username, password):
    try:
        main_client.start()
        main_client_info = main_client.get_users("me")
    except Exception as e:
        print(e)
    finally: main_client.stop()

    data = {
        'telegram_user_id': main_client_info.id,
        'username': username,
        'password': password
    }

    r = requests.post(url='https://arrakkenapi.pythonanywhere.com/arrakken/api', data=data).json()

    return r['success']

with open(f'{getcwd()}/config.yaml', 'r') as cfg:
    data = safe_load(cfg)
    channel_id = data['CHANNEL_ID']
    bot_id = data['BOT_ID']
    
    if 'ADMIN' not in data.keys():
        admin = input('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à —Ç–µ–ª–µ–≥—Ä–∞–º –∞–π–¥–∏ (–¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–ø–∏—à–∏—Ç–µ /start –≤ –±–æ—Ç–µ @getmyid_bot): ')
        yaml_dump('ADMIN', admin)
    else:
        admin = data['ADMIN']
    
    if 'USERNAME' in data.keys():
        username = data['USERNAME']

    if 'PASSWORD' in data.keys():
        password = data['PASSWORD']
    
    if 'TOKEN' not in data.keys():
        bot_token = input('–í–≤–µ–¥–∏—Ç–µ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ —á–µ—Ä–µ–∑ @botfather: ')
        yaml_dump('TOKEN', bot_token)
    else:
        bot_token = data['TOKEN']
    
    if 'API_ID' not in data.keys():
        api_id = input('–í–≤–µ–¥–∏—Ç–µ api_id –∏–∑ —Å–∞–π—Ç–∞ my.telegram.org: ')
        yaml_dump('API_ID', api_id)
    else:
        api_id = data['API_ID']
    
    if 'API_HASH' not in data.keys():
        api_hash = input('–í–≤–µ–¥–∏—Ç–µ api_hash –∏–∑ —Å–∞–π—Ç–∞ my.telegram.org: ')
        yaml_dump('API_HASH', api_hash)
    else:
        api_hash = data['API_HASH']

    if 'HOME_ID' not in data.keys():
        home_id = input('1-–ê–∫—Ä–µ–∏—Ç–µ—Å—ã\n2-–•–∞–¥—Ä–æ–Ω–µ–Ω–Ω—ã\n3-–ö–æ—Ä—Ä—Ç–µ—Å—Å—ã\n–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à –∞–ª—å—è–Ω—Å(–í–≤–µ–¥–∏—Ç–µ —Ü–∏—Ñ—Ä—É –≤–∞—à–µ–≥–æ –¥–æ–º–∞ –∏–∑ —Å–ø–∏—Å–∫–∞ –≤—ã—à–µ): ')
        yaml_dump('HOME_ID', home_id)
    else:
        home_id = data['HOME_ID']
    
bot = Client('assistant_bot', bot_token=bot_token, api_id=api_id, api_hash=api_hash, workdir=f'{getcwd()}/sessions')
main_client = Client('@HoPHNi', workdir=f'{getcwd()}/sessions')

if 'USERNAME' not in data.keys() and 'PASSWORD' not in data.keys():
    while True:
        username = input('–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–∫—Ä–∏–ø—Ç—É: ')
        password = input('–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–∫—Ä–∏–ø—Ç—É: ')
        
        if send_requst(username, password):
            yaml_dump('USERNAME', username)
            yaml_dump('PASSWORD', password)
            break
        
        else:
            print('–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...')

if send_requst(username, password):
    working_status = False

    async def check_new_fight():
        await main_client.send_message(bot_id, '/start')
        time.sleep(1)
        async for last_message in main_client.get_chat_history(bot_id, limit=1):
            try:
                await last_message.click(1)
            except: pass
        time.sleep(1)
        async for last_message in main_client.get_chat_history(bot_id, limit=1):
            if int(last_message.caption.split('—á–µ—Ä–µ–∑ ')[1].split('—á')[0]) == 11:
                return True
            else:
                return False

    async def send_farming(winner_id):
        await main_client.send_message(bot_id, '/start')
        time.sleep(1)
        async for last_message in main_client.get_chat_history(bot_id, limit=1):
            try:
                await last_message.click(3)
            except: pass
        time.sleep(1)
        async for last_message in main_client.get_chat_history(bot_id, limit=2):
            if last_message.caption == '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ': continue
            nft_id = last_message.text.split('ID ')[1].split(' /')[0]
            print(nft_id)
        time.sleep(1)
        async for last_message in main_client.get_chat_history(bot_id, limit=1):
            try:
                await last_message.click(4)
            except: pass
        time.sleep(1)
        await main_client.send_message(bot_id, str(nft_id))
        await bot.send_message(admin, f'üíé‚öîÔ∏è‚úÖ NFT ID {nft_id} - –£—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —Ñ–∞—Ä–º–∏—Ç—å \n–í—Ä–µ–º—è: {datetime.now().strftime("%H:%M:%S")}')

    async def send_fighting(winner_id):
        await main_client.send_message(bot_id, '/start')
        time.sleep(1)
        async for last_message in main_client.get_chat_history(bot_id, limit=1):
            try:
                await last_message.click(3)
            except: pass
        time.sleep(1)
        async for last_message in main_client.get_chat_history(bot_id, limit=2):
            if last_message.caption == '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ': continue
            nft_id = last_message.text.split('ID ')[1].split(' /')[0]
            print(nft_id)
        time.sleep(1)
        async for last_message in main_client.get_chat_history(bot_id, limit=1):
            try:
                await last_message.click(5)
            except: pass
        time.sleep(1)
        await main_client.send_message(bot_id, str(nft_id))
        time.sleep(1)
        atacking_home = '–ê–∫—Ä–µ–∏—Ç–µ—Å–æ–≤' if winner_id==2 and home_id==3 or winner_id==3 and home_id==2 else '–•–∞—Ä–¥—Ä–æ–Ω–µ–Ω–Ω–æ–≤' if winner_id==1 and home_id==3 or winner_id==3 and home_id==1 else "–ö–æ—Ä—Ä—Ç–µ—Å—Å–æ–≤"
        async for last_message in main_client.get_chat_history(bot_id, limit=1):
            try:
                await last_message.click(f'‚öîÔ∏è –ê—Ç–∞–∫–æ–≤–∞—Ç—å –î–æ–º {atacking_home}')
            except: pass
        await bot.send_message(admin, f'‚úÖ NFT ID {nft_id} - –£—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —Å—Ä–∞–∂–∞—Ç—å—Å—è –ø—Ä–æ—Ç–∏–≤ {atacking_home} \n–í—Ä–µ–º—è: {datetime.now().strftime("%H:%M:%S")}')

    @bot.on_message(filters.command("start"))
    async def reply(client, message):
        if int(message.from_user.id) == int(admin):
            await bot.send_message(
                message.from_user.id,
                f"Welcome, {message.from_user.first_name}! Glad to see you here!",
                reply_markup = ReplyKeyboardMarkup(
                        [
                            ["/change_status"]
                        ],
                        resize_keyboard=True
                    )
            )
        else:
            await bot.send_message(
                message.from_user.id,
                "Access denied! You are not an admin!",)
            
    @bot.on_message(filters.command("change_status"))
    async def reply(client, message):
        if int(message.from_user.id) == int(admin):
            global working_status
            if not working_status:
                working_status = True
                await bot.send_message(message.from_user.id, '–ê–≤—Ç–æ–æ—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞ —Ñ–∞—Ä–º –∏ –Ω–∞ —Å—Ä–∞–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –≤–∫–ª—é—á–µ–Ω–æ! –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ —Å–ø–æ–∫–æ–π–Ω–æ –∏–¥—Ç–∏ —Å–ø–∞—Ç—å :)')
            else:
                working_status = False
                await bot.send_message(message.from_user.id, '–û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞ —Ñ–∞—Ä–º –∏ —Å—Ä–∞–∂–µ–Ω–∏—è —Ç–µ–ø–µ—Ä—å –≤ —Ä—É—á–Ω–æ–º —Ä–µ–∂–∏–º–µ, –±—É–¥—å—Ç–µ –Ω–∞—á–µ–∫—É!')
        else:
            await bot.send_message(
                message.from_user.id,
                "Access denied! You are not an admin!",)

    @main_client.on_message(filters.chat(channel_id))
    async def _(client, message):
        if '–ë–∏—Ç–≤–∞ –∑–∞ –ê—Ä—Ä–∞–∫–∫–µ–Ω –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –ø–æ–±–µ–¥–æ–π –î–æ–º–∞' in message.text and await check_new_fight():
            time.sleep(15)
            winner_id = 1 if '–ê–∫—Ä–µ–∏—Ç–µ—Å—Å–æ–≤' in message.text else 2 if '–•–∞–¥—Ä–æ–Ω–µ–Ω–Ω–æ–≤' in message.text else 3
            
            if winner_id == int(home_id):
                await send_farming(winner_id)
            else:
                await send_fighting(winner_id)

    bot.start()
    main_client.start()

    idle()

    bot.stop()
    main_client.stop()